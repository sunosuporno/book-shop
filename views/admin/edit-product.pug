extends ../layouts/main-layout.pug

block styles 
    link(rel="stylesheet", href="/css/forms.css")
    link(rel="stylesheet", href="/css/product.css")    

block content 
    main
        if errorMessage 
            div.user-message.user-message--error #{errorMessage}
        if editing || hasError
            form.product-form(action="/admin/edit-product" method="POST" enctype = "multipart/form-data")
                .form-control
                    label(for="title") Title
                    - var url = validationErrors.find(e => e.param === 'title')
                    input(class = url ? 'invalid' : '', type="text" name="title" value = product.title )#title
                .form-control
                    label(for="image") Image URL
                    input( type="file" name="image" )#image
                //- .form-control
                //-     label(for="imageUrl") Image URL
                //-     - var url = validationErrors.find(e => e.param === 'imageUrl')
                //-     input(class = url ? 'invalid' : '', type="url" name="imageUrl" value = product.imageUrl )#imageUrl
                .form-control
                    label(for="price") Price
                    - var url = validationErrors.find(e => e.param === 'price')
                    input(class = url ? 'invalid' : '', type="number" name="price" step= "0.01" value = product.price )#price
                .form-control
                    label(for="description") Description
                    - var url = validationErrors.find(e => e.param === 'description')
                    textarea(class = url ? 'invalid' : '', name="description", rows="5" )#description #{product.description}
                input(type="hidden", value = product._id, name="productId")
                input(type="hidden", value = csrfToken, name = "_csrf")
                button.btn(type="submit") Update Product
        else 
            form.product-form(action="/admin/add-product" method="POST" enctype = "multipart/form-data")
                .form-control
                    label(for="title") Title
                    - var url = validationErrors.find(e => e.param === 'title')
                    input(class = url ? 'invalid' : '', type="text" name="title")#title
                .form-control
                    label(for="image") Image URL
                    input( type="file" name="image" )#image
                .form-control
                    label(for="price") Price
                    - var url = validationErrors.find(e => e.param === 'price')
                    input(class = url ? 'invalid' : '', type="number" name="price" step= "0.01")#price
                .form-control
                    label(for="description") Description
                    - var url = validationErrors.find(e => e.param === 'description')
                    textarea(class = url ? 'invalid' : '', name="description", rows="5")#description
                    input(type="hidden", value = csrfToken, name = "_csrf")
                    button.btn(type="submit") Add Product
                                                       





